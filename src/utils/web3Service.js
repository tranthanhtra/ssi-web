const Web3 = require("web3");

const web3 = new Web3(window.ethereum);

const IdentifierABI = [
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [],
        "name": "getRSCAddress",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newAddress",
                "type": "address"
            }
        ],
        "name": "recover",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes",
                "name": "sig",
                "type": "bytes"
            }
        ],
        "name": "splitSignature",
        "outputs": [
            {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
            },
            {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
            },
            {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
            }
        ],
        "stateMutability": "pure",
        "type": "function"
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "internalType": "uint64",
                        "name": "dateOfBirth",
                        "type": "uint64"
                    },
                    {
                        "internalType": "string",
                        "name": "socialID",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "nationality",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "phoneNumber",
                        "type": "string"
                    }
                ],
                "internalType": "struct PersonalRecord",
                "name": "record",
                "type": "tuple"
            }
        ],
        "name": "store",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_friend1",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_friend2",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_friend3",
                "type": "address"
            }
        ],
        "name": "storeRecovery",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
            },
            {
                "internalType": "bytes32",
                "name": "hash",
                "type": "bytes32"
            }
        ],
        "name": "verify",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
            },
            {
                "internalType": "bytes32",
                "name": "hash",
                "type": "bytes32"
            }
        ],
        "name": "verifySingleSignOn",
        "outputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    }
]

const ServiceABI = [
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "_name",
                "type": "string"
            },
            {
                "internalType": "uint64",
                "name": "_dateOfBirth",
                "type": "uint64"
            },
            {
                "internalType": "string",
                "name": "_socialID",
                "type": "string"
            },
            {
                "internalType": "string",
                "name": "_nationality",
                "type": "string"
            },
            {
                "internalType": "string",
                "name": "_email",
                "type": "string"
            },
            {
                "internalType": "string",
                "name": "_phoneNumber",
                "type": "string"
            },
            {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
            }
        ],
        "name": "createISC",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "_socialID",
                "type": "string"
            }
        ],
        "name": "getDID",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "socialId",
                "type": "string"
            },
            {
                "internalType": "address",
                "name": "_friend1",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_friend2",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_friend3",
                "type": "address"
            }
        ],
        "name": "storeRecovery",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]
export const Web3Service = {
    signMessage: async (message, account, callback) => {
        const hash = Web3.utils.sha3(message);
        console.log(hash);
        await web3.eth.sign(hash, account, (e, signature) => {
            console.log(signature);
            callback(hash, signature);
        }).then(res => console.log(res))
            .catch(err => console.log(err));
    },

    verifyCertificate: (certificate, signature, address, callback) => {
        const hash = Web3.utils.sha3(certificate);
        console.log(hash);
        try {
            const contract = new web3.eth.Contract(IdentifierABI, address);
            contract.methods.verify(signature, hash).call(function (err, isValid) {
                console.log(isValid);
                callback(isValid);
            });
        } catch (err) {
            console.log(err);
        }
    },

    signup: async (did, name, dateOfBirth, socialId, nationality, email, phoneNumber, walletAddress, account, callback) => {
        try {
            const contract = new web3.eth.Contract(ServiceABI, did);
            contract.methods.createISC(name, dateOfBirth, socialId, nationality, email, phoneNumber, walletAddress).send({
                from: account,
            }).then(function () {
                contract.methods.getDID(socialId).call().then(function (address) {
                    console.log(address)
                    callback(address);
                });
            });
        } catch (err) {
            console.log(err);
        }
    },

    providerSignUp: async (name, walletAdress, account, callback) => {
        try {
            const newISC = new web3.eth.Contract(ServiceABI);
            newISC
                .deploy({
                    arguments: [walletAdress],
                    data: "608060405234801561001057600080fd5b5060405162002c3b38038062002c3b8339818101604052810190610034919061011e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100eb826100c0565b9050919050565b6100fb816100e0565b811461010657600080fd5b50565b600081519050610118816100f2565b92915050565b600060208284031215610134576101336100bb565b5b600061014284828501610109565b91505092915050565b612ae0806200015b6000396000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c8063a6b32b35146200004b578063d706678d1462000081578063e078389814620000a1575b600080fd5b6200006960048036038101906200006391906200076a565b620000d7565b604051620000789190620008c9565b60405180910390f35b6200009f6004803603810190620000999190620008e6565b620002e0565b005b620000bf6004803603810190620000b9919062000977565b6200042c565b604051620000ce9190620008c9565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200016c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001639062000a4f565b60405180910390fd5b60006040518060c001604052808a81526020018967ffffffffffffffff168152602001888152602001878152602001868152602001858152509050600083604051620001b8906200053c565b620001c49190620008c9565b604051809103906000f080158015620001e1573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff166302651684836040518263ffffffff1660e01b81526004016200021f919062000bbc565b6020604051808303816000875af11580156200023f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000265919062000c1d565b508060028960405162000279919062000c91565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620002d08162000476565b8092505050979650505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000373576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200036a9062000a4f565b60405180910390fd5b60028460405162000385919062000c91565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ab9c9bd8484846040518463ffffffff1660e01b8152600401620003f29392919062000caa565b600060405180830381600087803b1580156200040d57600080fd5b505af115801562000422573d6000803e3d6000fd5b5050505050505050565b600060028260405162000440919062000c91565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b62000510816040516024016200048d9190620008c9565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505062000513565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b611dc38062000ce883390190565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005b38262000568565b810181811067ffffffffffffffff82111715620005d557620005d462000579565b5b80604052505050565b6000620005ea6200054a565b9050620005f88282620005a8565b919050565b600067ffffffffffffffff8211156200061b576200061a62000579565b5b620006268262000568565b9050602081019050919050565b82818337600083830152505050565b6000620006596200065384620005fd565b620005de565b90508281526020810184848401111562000678576200067762000563565b5b6200068584828562000633565b509392505050565b600082601f830112620006a557620006a46200055e565b5b8135620006b784826020860162000642565b91505092915050565b600067ffffffffffffffff82169050919050565b620006df81620006c0565b8114620006eb57600080fd5b50565b600081359050620006ff81620006d4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007328262000705565b9050919050565b620007448162000725565b81146200075057600080fd5b50565b600081359050620007648162000739565b92915050565b600080600080600080600060e0888a0312156200078c576200078b62000554565b5b600088013567ffffffffffffffff811115620007ad57620007ac62000559565b5b620007bb8a828b016200068d565b9750506020620007ce8a828b01620006ee565b965050604088013567ffffffffffffffff811115620007f257620007f162000559565b5b620008008a828b016200068d565b955050606088013567ffffffffffffffff81111562000824576200082362000559565b5b620008328a828b016200068d565b945050608088013567ffffffffffffffff81111562000856576200085562000559565b5b620008648a828b016200068d565b93505060a088013567ffffffffffffffff81111562000888576200088762000559565b5b620008968a828b016200068d565b92505060c0620008a98a828b0162000753565b91505092959891949750929550565b620008c38162000725565b82525050565b6000602082019050620008e06000830184620008b8565b92915050565b6000806000806080858703121562000903576200090262000554565b5b600085013567ffffffffffffffff81111562000924576200092362000559565b5b62000932878288016200068d565b9450506020620009458782880162000753565b9350506040620009588782880162000753565b92505060606200096b8782880162000753565b91505092959194509250565b60006020828403121562000990576200098f62000554565b5b600082013567ffffffffffffffff811115620009b157620009b062000559565b5b620009bf848285016200068d565b91505092915050565b600082825260208201905092915050565b7f6f6e6c79206f776e65722063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b600062000a37602283620009c8565b915062000a4482620009d9565b604082019050919050565b6000602082019050818103600083015262000a6a8162000a28565b9050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000aad57808201518184015260208101905062000a90565b60008484015250505050565b600062000ac68262000a71565b62000ad2818562000a7c565b935062000ae481856020860162000a8d565b62000aef8162000568565b840191505092915050565b62000b0581620006c0565b82525050565b600060c083016000830151848203600086015262000b2a828262000ab9565b915050602083015162000b41602086018262000afa565b506040830151848203604086015262000b5b828262000ab9565b9150506060830151848203606086015262000b77828262000ab9565b9150506080830151848203608086015262000b93828262000ab9565b91505060a083015184820360a086015262000baf828262000ab9565b9150508091505092915050565b6000602082019050818103600083015262000bd8818462000b0b565b905092915050565b60008115159050919050565b62000bf78162000be0565b811462000c0357600080fd5b50565b60008151905062000c178162000bec565b92915050565b60006020828403121562000c365762000c3562000554565b5b600062000c468482850162000c06565b91505092915050565b600081905092915050565b600062000c678262000a71565b62000c73818562000c4f565b935062000c8581856020860162000a8d565b80840191505092915050565b600062000c9f828462000c5a565b915081905092915050565b600060608201905062000cc16000830186620008b8565b62000cd06020830185620008b8565b62000cdf6040830184620008b8565b94935050505056fe60806040526000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405162001dc338038062001dc383398181016040528101906200006b9190620001eb565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600030604051620000fe9062000173565b6200010a919062000288565b604051809103906000f08015801562000127573d6000803e3d6000fd5b50905080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002a5565b61092e806200149583390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b38262000186565b9050919050565b620001c581620001a6565b8114620001d157600080fd5b50565b600081519050620001e581620001ba565b92915050565b60006020828403121562000204576200020362000181565b5b60006200021484828501620001d4565b91505092915050565b6000819050919050565b600062000248620002426200023c8462000186565b6200021d565b62000186565b9050919050565b60006200025c8262000227565b9050919050565b600062000270826200024f565b9050919050565b620002828162000263565b82525050565b60006020820190506200029f600083018462000277565b92915050565b6111e080620002b56000396000f3fe6080604052600436106100705760003560e01c80636b4063411161004e5780636b406341146100fe57806390ff07f91461013b57806395cfbe7f14610178578063a7bb5803146101a357610070565b806302651684146100755780630cd865ec146100a55780632ab9c9bd146100d5575b600080fd5b61008f600480360381019061008a91906109ae565b6101e2565b60405161009c9190610a12565b60405180910390f35b6100bf60048036038101906100ba9190610a8b565b61031f565b6040516100cc9190610a12565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610ab8565b6103ca565b005b34801561010a57600080fd5b5061012560048036038101906101209190610be2565b6104f0565b6040516101329190610a12565b60405180910390f35b34801561014757600080fd5b50610162600480360381019061015d9190610be2565b6105b5565b60405161016f9190610cbd565b60405180910390f35b34801561018457600080fd5b5061018d610671565b60405161019a9190610cee565b60405180910390f35b3480156101af57600080fd5b506101ca60048036038101906101c59190610d09565b61069b565b6040516101d993929190610d7d565b60405180910390f35b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610e26565b60405180910390fd5b8160008082015181600001908161028b919061105c565b5060208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160020190816102d0919061105c565b5060608201518160030190816102e6919061105c565b5060808201518160040190816102fc919061105c565b5060a0820151816005019081610312919061105c565b5090505060019050919050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036103c05781600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506103c5565b600090505b919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045190610e26565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b87599cd8484846040518463ffffffff1660e01b81526004016104b99392919061112e565b600060405180830381600087803b1580156104d357600080fd5b505af11580156104e7573d6000803e3d6000fd5b50505050505050565b6000806000806104ff8661069b565b8093508194508295505050506001858484846040516000815260200160405260405161052e9493929190611165565b6020604051602081039080840390855afa158015610550573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614935050505092915050565b60606105c183836104f0565b6105da5760405180602001604052806000815250610669565b600060040180546105ea90610e75565b80601f016020809104026020016040519081016040528092919081815260200182805461061690610e75565b80156106635780601f1061063857610100808354040283529160200191610663565b820191906000526020600020905b81548152906001019060200180831161064657829003601f168201915b50505050505b905092915050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600060418451146106ae57600080fd5b60008060006020870151925060408701519150606087015160001a90508083839550955095505050509193909250565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610740826106f7565b810181811067ffffffffffffffff8211171561075f5761075e610708565b5b80604052505050565b60006107726106de565b905061077e8282610737565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156107ad576107ac610708565b5b6107b6826106f7565b9050602081019050919050565b82818337600083830152505050565b60006107e56107e084610792565b610768565b9050828152602081018484840111156108015761080061078d565b5b61080c8482856107c3565b509392505050565b600082601f83011261082957610828610788565b5b81356108398482602086016107d2565b91505092915050565b600067ffffffffffffffff82169050919050565b61085f81610842565b811461086a57600080fd5b50565b60008135905061087c81610856565b92915050565b600060c08284031215610898576108976106f2565b5b6108a260c0610768565b9050600082013567ffffffffffffffff8111156108c2576108c1610783565b5b6108ce84828501610814565b60008301525060206108e28482850161086d565b602083015250604082013567ffffffffffffffff81111561090657610905610783565b5b61091284828501610814565b604083015250606082013567ffffffffffffffff81111561093657610935610783565b5b61094284828501610814565b606083015250608082013567ffffffffffffffff81111561096657610965610783565b5b61097284828501610814565b60808301525060a082013567ffffffffffffffff81111561099657610995610783565b5b6109a284828501610814565b60a08301525092915050565b6000602082840312156109c4576109c36106e8565b5b600082013567ffffffffffffffff8111156109e2576109e16106ed565b5b6109ee84828501610882565b91505092915050565b60008115159050919050565b610a0c816109f7565b82525050565b6000602082019050610a276000830184610a03565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5882610a2d565b9050919050565b610a6881610a4d565b8114610a7357600080fd5b50565b600081359050610a8581610a5f565b92915050565b600060208284031215610aa157610aa06106e8565b5b6000610aaf84828501610a76565b91505092915050565b600080600060608486031215610ad157610ad06106e8565b5b6000610adf86828701610a76565b9350506020610af086828701610a76565b9250506040610b0186828701610a76565b9150509250925092565b600067ffffffffffffffff821115610b2657610b25610708565b5b610b2f826106f7565b9050602081019050919050565b6000610b4f610b4a84610b0b565b610768565b905082815260208101848484011115610b6b57610b6a61078d565b5b610b768482856107c3565b509392505050565b600082601f830112610b9357610b92610788565b5b8135610ba3848260208601610b3c565b91505092915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b60008060408385031215610bf957610bf86106e8565b5b600083013567ffffffffffffffff811115610c1757610c166106ed565b5b610c2385828601610b7e565b9250506020610c3485828601610bcd565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c78578082015181840152602081019050610c5d565b60008484015250505050565b6000610c8f82610c3e565b610c998185610c49565b9350610ca9818560208601610c5a565b610cb2816106f7565b840191505092915050565b60006020820190508181036000830152610cd78184610c84565b905092915050565b610ce881610a4d565b82525050565b6000602082019050610d036000830184610cdf565b92915050565b600060208284031215610d1f57610d1e6106e8565b5b600082013567ffffffffffffffff811115610d3d57610d3c6106ed565b5b610d4984828501610b7e565b91505092915050565b600060ff82169050919050565b610d6881610d52565b82525050565b610d7781610bac565b82525050565b6000606082019050610d926000830186610d5f565b610d9f6020830185610d6e565b610dac6040830184610d6e565b949350505050565b7f6f6e6c792070726f76696465722063616e20706572666f726d2074686973206160008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000610e10602583610c49565b9150610e1b82610db4565b604082019050919050565b60006020820190508181036000830152610e3f81610e03565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e8d57607f821691505b602082108103610ea057610e9f610e46565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610f087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610ecb565b610f128683610ecb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610f59610f54610f4f84610f2a565b610f34565b610f2a565b9050919050565b6000819050919050565b610f7383610f3e565b610f87610f7f82610f60565b848454610ed8565b825550505050565b600090565b610f9c610f8f565b610fa7818484610f6a565b505050565b5b81811015610fcb57610fc0600082610f94565b600181019050610fad565b5050565b601f82111561101057610fe181610ea6565b610fea84610ebb565b81016020851015610ff9578190505b61100d61100585610ebb565b830182610fac565b50505b505050565b600082821c905092915050565b600061103360001984600802611015565b1980831691505092915050565b600061104c8383611022565b9150826002028217905092915050565b61106582610c3e565b67ffffffffffffffff81111561107e5761107d610708565b5b6110888254610e75565b611093828285610fcf565b600060209050601f8311600181146110c657600084156110b4578287015190505b6110be8582611040565b865550611126565b601f1984166110d486610ea6565b60005b828110156110fc578489015182556001820191506020850194506020810190506110d7565b868310156111195784890151611115601f891682611022565b8355505b6001600288020188555050505b505050505050565b60006060820190506111436000830186610cdf565b6111506020830185610cdf565b61115d6040830184610cdf565b949350505050565b600060808201905061117a6000830187610d6e565b6111876020830186610d5f565b6111946040830185610d6e565b6111a16060830184610d6e565b9594505050505056fea26469706673582212205186c473c522f2db0b9caafe0817778f026fec5b3c172302e17df04e4422776c64736f6c63430008120033608060405260405161092e38038061092e833981810160405281019061002591906100e1565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b60006100ae82610091565b9050919050565b6100be816100a3565b81146100c957600080fd5b50565b6000815190506100db816100b5565b92915050565b6000602082840312156100f7576100f661006c565b5b6000610105848285016100cc565b91505092915050565b6108118061011d6000396000f3fe6080604052600436106100345760003560e01c80633537d3fa1461003957806374a8f10314610055578063b87599cd14610071575b600080fd5b610053600480360381019061004e91906105e9565b61008d565b005b61006f600480360381019061006a9190610629565b6102d1565b005b61008b60048036038101906100869190610656565b61042f565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610100576001600360146101000a81548160ff0219169083151502179055506101e8565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610175576001600360156101000a81548160ff0219169083151502179055506101e7565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101e6576001600360166101000a81548160ff0219169083151502179055505b5b5b600360149054906101000a900460ff1680156102105750600360159054906101000a900460ff165b80156102285750600360169054906101000a900460ff165b156102cd57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630cd865ec826040518263ffffffff1660e01b815260040161028891906106b8565b6020604051808303816000875af11580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb919061070b565b505b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610344576000600360146101000a81548160ff02191690831515021790555061042c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103b9576000600360156101000a81548160ff02191690831515021790555061042b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361042a576000600360166101000a81548160ff0219169083151502179055505b5b5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b6906107bb565b60405180910390fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105b68261058b565b9050919050565b6105c6816105ab565b81146105d157600080fd5b50565b6000813590506105e3816105bd565b92915050565b60008060408385031215610600576105ff610586565b5b600061060e858286016105d4565b925050602061061f858286016105d4565b9150509250929050565b60006020828403121561063f5761063e610586565b5b600061064d848285016105d4565b91505092915050565b60008060006060848603121561066f5761066e610586565b5b600061067d868287016105d4565b935050602061068e868287016105d4565b925050604061069f868287016105d4565b9150509250925092565b6106b2816105ab565b82525050565b60006020820190506106cd60008301846106a9565b92915050565b60008115159050919050565b6106e8816106d3565b81146106f357600080fd5b50565b600081519050610705816106df565b92915050565b60006020828403121561072157610720610586565b5b600061072f848285016106f6565b91505092915050565b600082825260208201905092915050565b7f6f6e6c7920746865206173736f6369617465204953432063616e20706572666f60008201527f726d207468697320616374696f6e000000000000000000000000000000000000602082015250565b60006107a5602e83610738565b91506107b082610749565b604082019050919050565b600060208201905081810360008301526107d481610798565b905091905056fea2646970667358221220bbc1e8e088e3c4d6c3ebf43bacd3a104fabd3d6ea1308df93b99c603a5e179a464736f6c63430008120033a26469706673582212202c52df0cbe3de5d0ef2efba209767b7e174c98b0ef9efbd363564459582c12be64736f6c63430008120033",
                })
                .send({
                    from: account,
                },)
                .then(function (newContractInstance) {
                    console.log(newContractInstance.options.address); // instance with the new contract address
                    callback(newContractInstance.options.address);
                });
        } catch (err) {
            console.log(err)
        }
    }
}
